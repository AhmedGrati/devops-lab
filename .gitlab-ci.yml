image: docker/compose:latest


services:
  - name: docker:20-dind
    alias: docker
    command:
      - "--tls=false"

stages:
  - "build"
  - "test"
  - "release"
  - "deploy"

variables:
  REPO: https://${USERNAME}:${PASSWORD}@gitlab.com/AhmedGrati/devops-lab
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""


run_build:
  image: node:latest
  stage: build
  environment:
    name: buil
  tags:
    - "ci"
  before_script:
  - "npm --version"
  script:
    - "cd ./unit-int-tests/sahti-backend"
    - "npm i --legacy-peer-deps "
    - "npm run build"

run_test:
  stage: test
  environment:
    name: test
  before_script:
    - "docker info"
    - "docker-compose --version"
  tags:
    - "ci"
  script:
    - "apk add --update nodejs npm"
    - "cd ./unit-int-tests/sahti-backend"
    - "npm i --legacy-peer-deps"
    - "npm run test"
    - "npm run test:e2e"

build_push_image:
  stage: release
  tags:
    - "cd"
  script:
    - "cd unit-int-tests/sahti-backend"
    - "docker build -t ${DOCKER_HUB_LOGIN}/sahti --target=production ."
    - "docker login -u ${DOCKER_HUB_LOGIN} -p ${DOCKER_HUB_PASSWORD}"
    - "docker push ${DOCKER_HUB_LOGIN}/sahti"

deploy_containers:
  stage: deploy
  tags:
    - "cd"
  before_script:
    - 'which ssh-agent || ( apk add --update --no-cache openssh )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh-add <(echo "$PRIVATE_KEY" | base64 -d)
    - rm -rf .git
    - ssh -o StrictHostKeyChecking=no ubuntu@"$SERVER" "rm -rf ~/${PROJECT_NAME}; mkdir ~/${PROJECT_NAME}; git init; git clone -b ${BRANCH} ${REPO}; cd ${PROJECT_NAME}/unit-int-tests/sahti-backend; echo ${ENV_FILE} > .env; docker-compose up"
